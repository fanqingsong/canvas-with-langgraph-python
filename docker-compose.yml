services:
  # 前端服务 (Next.js)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_AGENT_URL=http://backend:8123
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  # 后端服务 (Python LangGraph)
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8123:8123"
    environment:
      - PYTHONPATH=/app/agent
      - LANGCHAIN_TRACING_V2=true
      - LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - LANGCHAIN_PROJECT=${LANGCHAIN_PROJECT:-langgraph-canvas}
      # Azure OpenAI 配置
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY:-}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT:-}
      - AZURE_OPENAI_DEPLOYMENT_NAME=${AZURE_OPENAI_DEPLOYMENT_NAME:-gpt-4o-mini}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION:-2024-02-15-preview}
    volumes:
      - ./agent:/app/agent
      - /app/agent/.venv  # 排除虚拟环境目录
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8123/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  app-network:
    driver: bridge

volumes:
  node_modules:
  python_cache:
